---
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';
import Footer from '../../components/Footer.astro';

// Import JSON data
import perfumeData from '../../data/perfumes.json';
import siteData from '../../data/site.json';

export async function getStaticPaths() {
  const { products } = perfumeData;
  
  return products.map((product) => ({
    params: { slug: product.slug || product.id },
    props: { product },
  }));
}

const { product } = Astro.props;
const { site, navigation } = siteData;
---

<Layout title={`${product.name} - ${site.name}`}>
  <Navigation navigation={navigation} site={site} />
  
  <main class="product-page">
    <div class="container">
      <!-- Breadcrumb -->
      <nav class="breadcrumb">
        <a href="/">Home</a>
        <span class="separator">/</span>
        <a href="/#collection">Collection</a>
        <span class="separator">/</span>
        <span class="current">{product.name}</span>
      </nav>

      <div class="product-container">
        <!-- Product Image -->
        <div class="product-image-section">
          {product.image ? (
            <img src={product.image} alt={product.name} class="product-image" />
          ) : (
            <div class="product-placeholder">
              <div class="placeholder-bottle"></div>
            </div>
          )}
        </div>

        <!-- Product Details -->
        <div class="product-details-section">
          <div class="product-badges">
            <span class="product-category">{product.category}</span>
            <span class="product-type">{product.productType?.replace('-', ' ')}</span>
            {product.inStock === false && <span class="out-of-stock">Out of Stock</span>}
          </div>

          <h1 class="product-title">{product.name}</h1>
          <p class="product-description">{product.description}</p>
          
          <div class="product-price">${product.price}</div>

          <!-- Fragrance Notes -->
          {product.notes && (
            <div class="fragrance-notes">
              <h3>Fragrance Notes</h3>
              <div class="notes-container">
                <div class="note-section">
                  <h4>Top Notes</h4>
                  <p>{product.notes.top.join(', ')}</p>
                </div>
                <div class="note-section">
                  <h4>Heart Notes</h4>
                  <p>{product.notes.middle.join(', ')}</p>
                </div>
                <div class="note-section">
                  <h4>Base Notes</h4>
                  <p>{product.notes.base.join(', ')}</p>
                </div>
              </div>
            </div>
          )}

          <!-- Product Information -->
          <div class="product-info">
            <h3>Product Information</h3>
            <div class="info-grid">
              <div class="info-item">
                <span class="info-label">Category:</span>
                <span class="info-value">{product.category}</span>
              </div>
              <div class="info-item">
                <span class="info-label">Type:</span>
                <span class="info-value">{product.productType?.replace('-', ' ')}</span>
              </div>
              <div class="info-item">
                <span class="info-label">For:</span>
                <span class="info-value">{product.gender === 'unisex' ? 'Everyone' : product.gender}</span>
              </div>
              <div class="info-item">
                <span class="info-label">Availability:</span>
                <span class="info-value stock-status" data-stock={product.inStock}>
                  {product.inStock !== false ? 'In Stock' : 'Out of Stock'}
                </span>
              </div>
            </div>
          </div>

          <!-- Add to Cart Section -->
          <div class="add-to-cart-section">
            <button class="add-to-cart-btn" data-product={product.id} data-price={product.price} disabled={product.inStock === false}>
              {product.inStock !== false ? 'Add to Cart' : 'Out of Stock'}
            </button>
            <a href="/#collection" class="back-to-collection">‚Üê Back to Collection</a>
          </div>
        </div>
      </div>
    </div>
  </main>

  <Footer site={site} />
</Layout>

<style>
/* Product Page Styles */
.product-page {
  padding-top: 100px;
  min-height: 100vh;
  background: #ffffff;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}

/* Breadcrumb */
.breadcrumb {
  margin-bottom: 2rem;
  font-size: 0.9rem;
  color: #666;
}

.breadcrumb a {
  color: #8b7355;
  text-decoration: none;
  transition: color 0.3s ease;
}

.breadcrumb a:hover {
  color: #2c2c2c;
}

.separator {
  margin: 0 0.5rem;
  color: #ccc;
}

.current {
  color: #2c2c2c;
  font-weight: 500;
}

/* Product Container */
.product-container {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 4rem;
  margin-bottom: 4rem;
}

/* Product Image Section */
.product-image-section {
  position: sticky;
  top: 120px;
  height: fit-content;
}

.product-image {
  width: 100%;
  height: auto;
  max-height: 600px;
  object-fit: contain;
  border-radius: 12px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

.product-placeholder {
  width: 100%;
  height: 500px;
  background: linear-gradient(145deg, #f8f8f8, #e8e8e8);
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

.placeholder-bottle {
  width: 120px;
  height: 180px;
  background: linear-gradient(145deg, #e8e8e8, #d8d8d8);
  border-radius: 12px 12px 40px 40px;
  box-shadow: inset 0 4px 8px rgba(0,0,0,0.1);
}

/* Product Details Section */
.product-details-section {
  padding: 1rem 0;
}

.product-badges {
  display: flex;
  gap: 0.5rem;
  margin-bottom: 1rem;
  flex-wrap: wrap;
}

.product-category {
  background: #8b7355;
  color: white;
  padding: 6px 12px;
  border-radius: 6px;
  font-size: 0.8rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.product-type {
  background: #e8e8e8;
  color: #666;
  padding: 6px 12px;
  border-radius: 6px;
  font-size: 0.8rem;
  font-weight: 500;
  text-transform: capitalize;
  letter-spacing: 0.5px;
}

.out-of-stock {
  background: #f44336;
  color: white;
  padding: 6px 12px;
  border-radius: 6px;
  font-size: 0.8rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.product-title {
  font-size: 2.5rem;
  color: #2c2c2c;
  margin-bottom: 1rem;
  font-weight: 300;
  line-height: 1.2;
}

.product-description {
  font-size: 1.1rem;
  color: #666;
  line-height: 1.6;
  margin-bottom: 2rem;
}

.product-price {
  font-size: 2rem;
  color: #2c2c2c;
  font-weight: 500;
  margin-bottom: 3rem;
}

/* Fragrance Notes */
.fragrance-notes {
  margin-bottom: 3rem;
  padding: 2rem;
  background: #fafafa;
  border-radius: 12px;
  border-left: 4px solid #8b7355;
}

.fragrance-notes h3 {
  color: #2c2c2c;
  margin-bottom: 1.5rem;
  font-size: 1.3rem;
  font-weight: 500;
}

.notes-container {
  display: grid;
  gap: 1.5rem;
}

.note-section h4 {
  color: #8b7355;
  font-size: 1rem;
  font-weight: 500;
  margin-bottom: 0.5rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.note-section p {
  color: #666;
  font-size: 1rem;
  line-height: 1.5;
}

/* Product Information */
.product-info {
  margin-bottom: 3rem;
}

.product-info h3 {
  color: #2c2c2c;
  margin-bottom: 1.5rem;
  font-size: 1.3rem;
  font-weight: 500;
}

.info-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
}

.info-item {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.info-label {
  font-weight: 500;
  color: #8b7355;
  font-size: 0.9rem;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.info-value {
  color: #666;
  font-size: 1rem;
  text-transform: capitalize;
}

.stock-status[data-stock="true"] {
  color: #4CAF50;
  font-weight: 500;
}

.stock-status[data-stock="false"] {
  color: #f44336;
  font-weight: 500;
}

/* Add to Cart Section */
.add-to-cart-section {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.add-to-cart-btn {
  background: #2c2c2c;
  color: white;
  border: none;
  padding: 1rem 2rem;
  font-size: 1.1rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 1px;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.3s ease;
}

.add-to-cart-btn:hover:not(:disabled) {
  background: #8b7355;
  transform: translateY(-2px);
  box-shadow: 0 8px 20px rgba(139, 115, 85, 0.3);
}

.add-to-cart-btn:disabled {
  background: #ccc;
  color: #666;
  cursor: not-allowed;
  opacity: 0.6;
}

.back-to-collection {
  color: #8b7355;
  text-decoration: none;
  font-size: 1rem;
  font-weight: 500;
  transition: color 0.3s ease;
  text-align: center;
}

.back-to-collection:hover {
  color: #2c2c2c;
}

/* Responsive Design */
@media (max-width: 768px) {
  .product-container {
    grid-template-columns: 1fr;
    gap: 2rem;
  }
  
  .product-image-section {
    position: static;
  }
  
  .product-title {
    font-size: 2rem;
  }
  
  .product-price {
    font-size: 1.5rem;
  }
  
  .info-grid {
    grid-template-columns: 1fr;
  }
  
  .notes-container {
    gap: 1rem;
  }
  
  .fragrance-notes {
    padding: 1.5rem;
  }
}

@media (max-width: 480px) {
  .product-page {
    padding-top: 80px;
  }
  
  .container {
    padding: 0 15px;
  }
  
  .product-title {
    font-size: 1.8rem;
  }
  
  .product-badges {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .add-to-cart-btn {
    padding: 0.875rem 1.5rem;
    font-size: 1rem;
  }
}
</style>

<script>
// Add to cart functionality (same as in ProductCollection)
document.addEventListener('DOMContentLoaded', function() {
    const addToCartBtn = document.querySelector('.add-to-cart-btn');
    
    if (addToCartBtn && !addToCartBtn.disabled) {
        addToCartBtn.addEventListener('click', function() {
            const productId = this.getAttribute('data-product');
            const price = this.getAttribute('data-price');
            
            // Add to cart logic here (integrate with existing cart system)
            console.log(`Adding product ${productId} to cart with price $${price}`);
            
            // Visual feedback
            const originalText = this.textContent;
            this.textContent = 'Added to Cart!';
            this.style.background = '#4CAF50';
            
            setTimeout(() => {
                this.textContent = originalText;
                this.style.background = '';
            }, 2000);
        });
    }
});
</script>
